{"ast":null,"code":"var _jsxFileName = \"/home/reynboo/Project/Augmented-Furniture/src/App.js\";\nimport \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { XREstimatedLight } from \"three/examples/jsm/webxr/XREstimatedLight\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  let reticle;\n  let hitTestSource = null;\n  let hitTestSourceRequested = false;\n  let scene, camera, renderer;\n  let items = [{\n    model: \"./armchair.glb\",\n    scale: 0.01,\n    info: {\n      nama: \"Kursi Santai\",\n      harga: \"Rp 1.500.000\",\n      bahan: \"Kayu dan Kain\"\n    }\n  }, {\n    model: \"./dylan_armchair_yolk_yellow.glb\",\n    scale: 0.01,\n    info: {\n      nama: \"Kursi Dylan Kuning\",\n      harga: \"Rp 2.000.000\",\n      bahan: \"Kain Beludru\"\n    }\n  }, {\n    model: \"./marble_coffee_table.glb\",\n    scale: 0.01,\n    info: {\n      nama: \"Meja Kopi Marmer\",\n      harga: \"Rp 3.500.000\",\n      bahan: \"Marmer dan Logam\"\n    }\n  }, {\n    model: \"./flippa_functional_coffee_table_w._storagewalnut.glb\",\n    scale: 0.01,\n    info: {\n      nama: \"Meja Kopi Fungsional\",\n      harga: \"Rp 2.800.000\",\n      bahan: \"Kayu Walnut\"\n    }\n  }, {\n    model: \"./frame_armchairpetrol_velvet_with_gold_frame.glb\",\n    scale: 0.01,\n    info: {\n      nama: \"Kursi Bingkai Emas\",\n      harga: \"Rp 4.000.000\",\n      bahan: \"Beludru dan Logam Emas\"\n    }\n  }, {\n    model: \"./elnaz_nesting_side_tables_brass__green_marble.glb\",\n    scale: 0.01,\n    info: {\n      nama: \"Meja Samping Elnaz\",\n      harga: \"Rp 2.200.000\",\n      bahan: \"Marmer Hijau dan Kuningan\"\n    }\n  }];\n  let loadedModels = [];\n  let itemSelectedIndex = 0;\n  let controller;\n  shuffleArray(items);\n  init();\n  setupFurnitureSelection();\n  animate();\n  function init() {\n    let myCanvas = document.getElementById(\"canvas\");\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(70, myCanvas.innerWidth / myCanvas.innerHeight, 0.01, 20);\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    scene.add(light);\n    renderer = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\n    renderer.xr.enabled = true;\n\n    // Don't add the XREstimatedLight to the scene initially\n    // It doesn't have any estimated lighting values until an AR session starts\n    const xrLight = new XREstimatedLight(renderer);\n    xrLight.addEventListener(\"estimationstart\", () => {\n      // Swap the default light out for the estimated one so we start getting some estimated values.\n      scene.add(xrLight);\n      scene.remove(light);\n      // The estimated lighting also provides an env cubemap which we apply here\n      if (xrLight.environment) {\n        scene.environment = xrLight.environment;\n      }\n    });\n    xrLight.addEventListener(\"estimationend\", () => {\n      // Swap the lights back when we stop receiving estimated values\n      scene.add(light);\n      scene.remove(xrLight);\n\n      // Revert back to the default environment\n      // scene.environment =\n    });\n\n    let arButton = ARButton.createButton(renderer, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: {\n        root: document.body\n      }\n    });\n    arButton.style.bottom = \"20%\";\n    document.body.appendChild(arButton);\n    for (let i = 0; i < items.length; i++) {\n      const loader = new GLTFLoader();\n      loader.load(items[i].model, function (glb) {\n        let model = glb.scene;\n        loadedModels[i] = model;\n      });\n    }\n    controller = renderer.xr.getController(0);\n    controller.addEventListener(\"select\", onSelect);\n    scene.add(controller);\n    reticle = new THREE.Mesh(new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2), new THREE.MeshBasicMaterial());\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n  }\n  function onSelect() {\n    if (reticle.visible) {\n      let newModel = loadedModels[itemSelectedIndex].clone();\n      newModel.visible = true;\n      reticle.matrix.decompose(newModel.position, newModel.quaternion, newModel.scale);\n      let scaleFactor = items[itemSelectedIndex].scale;\n      newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n      scene.add(newModel);\n      const info = items[itemSelectedIndex].info;\n      const infoDiv = document.createElement(\"div\");\n      infoDiv.className = \"info-box\";\n      infoDiv.innerHTML = `<h3>${info.nama}</h3><p>Harga: ${info.harga}</p><p>Bahan: ${info.bahan}</p>`;\n      document.body.appendChild(infoDiv);\n\n      // Position the info box near the model\n      const screenPosition = toScreenPosition(newModel, camera);\n      infoDiv.style.left = `${screenPosition.x}px`;\n      infoDiv.style.top = `${screenPosition.y}px`;\n      setTimeout(() => {\n        infoDiv.remove();\n      }, 5000); // Remove after 5 seconds\n    }\n  }\n\n  const onClicked = (e, selectItem, index) => {\n    itemSelectedIndex = index;\n\n    // remove image selection from others to indicate unclicked\n    for (let i = 0; i < items.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.classList.remove(\"clicked\");\n    }\n    // set image to selected\n    e.target.classList.add(\"clicked\");\n  };\n  function setupFurnitureSelection() {\n    for (let i = 0; i < items.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.addEventListener(\"beforexrselect\", e => {\n        e.preventDefault();\n        e.stopPropagation();\n      });\n      el.addEventListener(\"click\", e => {\n        e.preventDefault();\n        e.stopPropagation();\n        onClicked(e, loadedModels[i], i);\n      });\n    }\n  }\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n  function toScreenPosition(obj, camera) {\n    var vector = new THREE.Vector3();\n    var widthHalf = 0.5 * renderer.getContext().canvas.width;\n    var heightHalf = 0.5 * renderer.getContext().canvas.height;\n    obj.updateMatrixWorld();\n    vector.setFromMatrixPosition(obj.matrixWorld);\n    vector.project(camera);\n    vector.x = vector.x * widthHalf + widthHalf;\n    vector.y = -(vector.y * heightHalf) + heightHalf;\n    return {\n      x: vector.x,\n      y: vector.y\n    };\n  }\n  function animate() {\n    renderer.setAnimationLoop(render);\n  }\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = renderer.xr.getReferenceSpace();\n      const session = renderer.xr.getSession();\n      if (hitTestSourceRequested === false) {\n        session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\n          session.requestHitTestSource({\n            space: referenceSpace\n          }).then(function (source) {\n            hitTestSource = source;\n          });\n        });\n        session.addEventListener(\"end\", function () {\n          hitTestSourceRequested = false;\n          hitTestSource = null;\n        });\n        hitTestSourceRequested = true;\n      }\n      if (hitTestSource) {\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n          reticle.visible = true;\n          reticle.matrix.fromArray(hit.getPose(referenceSpace).transform.matrix);\n        } else {\n          reticle.visible = false;\n        }\n      }\n    }\n    renderer.render(scene, camera);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["THREE","ARButton","GLTFLoader","XREstimatedLight","jsxDEV","_jsxDEV","App","reticle","hitTestSource","hitTestSourceRequested","scene","camera","renderer","items","model","scale","info","nama","harga","bahan","loadedModels","itemSelectedIndex","controller","shuffleArray","init","setupFurnitureSelection","animate","myCanvas","document","getElementById","Scene","PerspectiveCamera","innerWidth","innerHeight","light","HemisphereLight","position","set","add","WebGLRenderer","canvas","antialias","alpha","setPixelRatio","window","devicePixelRatio","setSize","xr","enabled","xrLight","addEventListener","remove","environment","arButton","createButton","requiredFeatures","optionalFeatures","domOverlay","root","body","style","bottom","appendChild","i","length","loader","load","glb","getController","onSelect","Mesh","RingGeometry","rotateX","Math","PI","MeshBasicMaterial","matrixAutoUpdate","visible","newModel","clone","matrix","decompose","quaternion","scaleFactor","infoDiv","createElement","className","innerHTML","screenPosition","toScreenPosition","left","x","top","y","setTimeout","onClicked","e","selectItem","index","el","querySelector","classList","target","preventDefault","stopPropagation","array","j","floor","random","obj","vector","Vector3","widthHalf","getContext","width","heightHalf","height","updateMatrixWorld","setFromMatrixPosition","matrixWorld","project","setAnimationLoop","render","timestamp","frame","referenceSpace","getReferenceSpace","session","getSession","requestReferenceSpace","then","requestHitTestSource","space","source","hitTestResults","getHitTestResults","hit","fromArray","getPose","transform","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/reynboo/Project/Augmented-Furniture/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { XREstimatedLight } from \"three/examples/jsm/webxr/XREstimatedLight\";\n\nfunction App() {\n  let reticle;\n  let hitTestSource = null;\n  let hitTestSourceRequested = false;\n\n  let scene, camera, renderer;\n\n  let items = [\n    {\n      model: \"./armchair.glb\",\n      scale: 0.01,\n      info: {\n        nama: \"Kursi Santai\",\n        harga: \"Rp 1.500.000\",\n        bahan: \"Kayu dan Kain\",\n      },\n    },\n    {\n      model: \"./dylan_armchair_yolk_yellow.glb\",\n      scale: 0.01,\n      info: {\n        nama: \"Kursi Dylan Kuning\",\n        harga: \"Rp 2.000.000\",\n        bahan: \"Kain Beludru\",\n      },\n    },\n    {\n      model: \"./marble_coffee_table.glb\",\n      scale: 0.01,\n      info: {\n        nama: \"Meja Kopi Marmer\",\n        harga: \"Rp 3.500.000\",\n        bahan: \"Marmer dan Logam\",\n      },\n    },\n    {\n      model: \"./flippa_functional_coffee_table_w._storagewalnut.glb\",\n      scale: 0.01,\n      info: {\n        nama: \"Meja Kopi Fungsional\",\n        harga: \"Rp 2.800.000\",\n        bahan: \"Kayu Walnut\",\n      },\n    },\n    {\n      model: \"./frame_armchairpetrol_velvet_with_gold_frame.glb\",\n      scale: 0.01,\n      info: {\n        nama: \"Kursi Bingkai Emas\",\n        harga: \"Rp 4.000.000\",\n        bahan: \"Beludru dan Logam Emas\",\n      },\n    },\n    {\n      model: \"./elnaz_nesting_side_tables_brass__green_marble.glb\",\n      scale: 0.01,\n      info: {\n        nama: \"Meja Samping Elnaz\",\n        harga: \"Rp 2.200.000\",\n        bahan: \"Marmer Hijau dan Kuningan\",\n      },\n    },\n  ];\n  let loadedModels = [];\n  let itemSelectedIndex = 0;\n\n  let controller;\n\n  shuffleArray(items);\n  init();\n  setupFurnitureSelection();\n  animate();\n\n  function init() {\n    let myCanvas = document.getElementById(\"canvas\");\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(\n      70,\n      myCanvas.innerWidth / myCanvas.innerHeight,\n      0.01,\n      20\n    );\n\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    scene.add(light);\n\n    renderer = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\n    renderer.xr.enabled = true;\n\n    // Don't add the XREstimatedLight to the scene initially\n    // It doesn't have any estimated lighting values until an AR session starts\n    const xrLight = new XREstimatedLight(renderer);\n    xrLight.addEventListener(\"estimationstart\", () => {\n      // Swap the default light out for the estimated one so we start getting some estimated values.\n      scene.add(xrLight);\n      scene.remove(light);\n      // The estimated lighting also provides an env cubemap which we apply here\n      if (xrLight.environment) {\n        scene.environment = xrLight.environment;\n      }\n    });\n\n    xrLight.addEventListener(\"estimationend\", () => {\n      // Swap the lights back when we stop receiving estimated values\n      scene.add(light);\n      scene.remove(xrLight);\n\n      // Revert back to the default environment\n      // scene.environment =\n    });\n\n    let arButton = ARButton.createButton(renderer, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: { root: document.body },\n    });\n    arButton.style.bottom = \"20%\";\n    document.body.appendChild(arButton);\n\n    for (let i = 0; i < items.length; i++) {\n      const loader = new GLTFLoader();\n      loader.load(items[i].model, function (glb) {\n        let model = glb.scene;\n        loadedModels[i] = model;\n      });\n    }\n\n    controller = renderer.xr.getController(0);\n    controller.addEventListener(\"select\", onSelect);\n    scene.add(controller);\n\n    reticle = new THREE.Mesh(\n      new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2),\n      new THREE.MeshBasicMaterial()\n    );\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n  }\n\n  function onSelect() {\n    if (reticle.visible) {\n      let newModel = loadedModels[itemSelectedIndex].clone();\n      newModel.visible = true;\n      reticle.matrix.decompose(\n        newModel.position,\n        newModel.quaternion,\n        newModel.scale\n      );\n      let scaleFactor = items[itemSelectedIndex].scale;\n      newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n      scene.add(newModel);\n\n      const info = items[itemSelectedIndex].info;\n      const infoDiv = document.createElement(\"div\");\n      infoDiv.className = \"info-box\";\n      infoDiv.innerHTML = `<h3>${info.nama}</h3><p>Harga: ${info.harga}</p><p>Bahan: ${info.bahan}</p>`;\n      document.body.appendChild(infoDiv);\n\n      // Position the info box near the model\n      const screenPosition = toScreenPosition(newModel, camera);\n      infoDiv.style.left = `${screenPosition.x}px`;\n      infoDiv.style.top = `${screenPosition.y}px`;\n\n      setTimeout(() => {\n        infoDiv.remove();\n      }, 5000); // Remove after 5 seconds\n    }\n  }\n\n  const onClicked = (e, selectItem, index) => {\n    itemSelectedIndex = index;\n\n    // remove image selection from others to indicate unclicked\n    for (let i = 0; i < items.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.classList.remove(\"clicked\");\n    }\n    // set image to selected\n    e.target.classList.add(\"clicked\");\n  };\n\n  function setupFurnitureSelection() {\n    for (let i = 0; i < items.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.addEventListener(\"beforexrselect\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n      });\n      el.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        onClicked(e, loadedModels[i], i);\n      });\n    }\n  }\n\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  function toScreenPosition(obj, camera) {\n    var vector = new THREE.Vector3();\n\n    var widthHalf = 0.5 * renderer.getContext().canvas.width;\n    var heightHalf = 0.5 * renderer.getContext().canvas.height;\n\n    obj.updateMatrixWorld();\n    vector.setFromMatrixPosition(obj.matrixWorld);\n    vector.project(camera);\n\n    vector.x = vector.x * widthHalf + widthHalf;\n    vector.y = -(vector.y * heightHalf) + heightHalf;\n\n    return {\n      x: vector.x,\n      y: vector.y,\n    };\n  }\n\n  function animate() {\n    renderer.setAnimationLoop(render);\n  }\n\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = renderer.xr.getReferenceSpace();\n      const session = renderer.xr.getSession();\n\n      if (hitTestSourceRequested === false) {\n        session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\n          session\n            .requestHitTestSource({ space: referenceSpace })\n            .then(function (source) {\n              hitTestSource = source;\n            });\n        });\n\n        session.addEventListener(\"end\", function () {\n          hitTestSourceRequested = false;\n          hitTestSource = null;\n        });\n\n        hitTestSourceRequested = true;\n      }\n\n      if (hitTestSource) {\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\n\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n\n          reticle.visible = true;\n          reticle.matrix.fromArray(\n            hit.getPose(referenceSpace).transform.matrix\n          );\n        } else {\n          reticle.visible = false;\n        }\n      }\n    }\n\n    renderer.render(scene, camera);\n  }\n\n  return <div className=\"App\"></div>;\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}